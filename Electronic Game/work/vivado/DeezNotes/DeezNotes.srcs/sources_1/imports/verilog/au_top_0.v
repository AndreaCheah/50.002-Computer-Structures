/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [7-1:0] M_seg_seg;
  wire [4-1:0] M_seg_sel;
  reg [16-1:0] M_seg_values;
  multi_seven_seg_1 seg (
    .clk(clk),
    .rst(rst),
    .values(M_seg_values),
    .seg(M_seg_seg),
    .sel(M_seg_sel)
  );
  wire [15-1:0] M_game_led_out;
  wire [1-1:0] M_game_dec_score_inc;
  wire [1-1:0] M_game_dec_score_rst;
  reg [1-1:0] M_game_button_1;
  reg [1-1:0] M_game_button_2;
  reg [1-1:0] M_game_button_3;
  reg [1-1:0] M_game_start_button;
  reg [1-1:0] M_game_reset_button;
  game_Beta_2 game (
    .clk(clk),
    .rst(rst),
    .button_1(M_game_button_1),
    .button_2(M_game_button_2),
    .button_3(M_game_button_3),
    .start_button(M_game_start_button),
    .reset_button(M_game_reset_button),
    .led_out(M_game_led_out),
    .dec_score_inc(M_game_dec_score_inc),
    .dec_score_rst(M_game_dec_score_rst)
  );
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_3 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_edge_dt_btn_start_out;
  reg [1-1:0] M_edge_dt_btn_start_in;
  edge_detector_4 edge_dt_btn_start (
    .clk(clk),
    .in(M_edge_dt_btn_start_in),
    .out(M_edge_dt_btn_start_out)
  );
  wire [1-1:0] M_edge_dt_btn_reset_out;
  reg [1-1:0] M_edge_dt_btn_reset_in;
  edge_detector_4 edge_dt_btn_reset (
    .clk(clk),
    .in(M_edge_dt_btn_reset_in),
    .out(M_edge_dt_btn_reset_out)
  );
  wire [1-1:0] M_edge_dt_btn_1_out;
  reg [1-1:0] M_edge_dt_btn_1_in;
  edge_detector_4 edge_dt_btn_1 (
    .clk(clk),
    .in(M_edge_dt_btn_1_in),
    .out(M_edge_dt_btn_1_out)
  );
  wire [1-1:0] M_edge_dt_btn_2_out;
  reg [1-1:0] M_edge_dt_btn_2_in;
  edge_detector_4 edge_dt_btn_2 (
    .clk(clk),
    .in(M_edge_dt_btn_2_in),
    .out(M_edge_dt_btn_2_out)
  );
  wire [1-1:0] M_edge_dt_btn_3_out;
  reg [1-1:0] M_edge_dt_btn_3_in;
  edge_detector_4 edge_dt_btn_3 (
    .clk(clk),
    .in(M_edge_dt_btn_3_in),
    .out(M_edge_dt_btn_3_out)
  );
  wire [1-1:0] M_btn_cond_start_out;
  reg [1-1:0] M_btn_cond_start_in;
  button_conditioner_5 btn_cond_start (
    .clk(clk),
    .in(M_btn_cond_start_in),
    .out(M_btn_cond_start_out)
  );
  wire [1-1:0] M_btn_cond_reset_out;
  reg [1-1:0] M_btn_cond_reset_in;
  button_conditioner_5 btn_cond_reset (
    .clk(clk),
    .in(M_btn_cond_reset_in),
    .out(M_btn_cond_reset_out)
  );
  wire [1-1:0] M_btn_cond_1_out;
  reg [1-1:0] M_btn_cond_1_in;
  button_conditioner_5 btn_cond_1 (
    .clk(clk),
    .in(M_btn_cond_1_in),
    .out(M_btn_cond_1_out)
  );
  wire [1-1:0] M_btn_cond_2_out;
  reg [1-1:0] M_btn_cond_2_in;
  button_conditioner_5 btn_cond_2 (
    .clk(clk),
    .in(M_btn_cond_2_in),
    .out(M_btn_cond_2_out)
  );
  wire [1-1:0] M_btn_cond_3_out;
  reg [1-1:0] M_btn_cond_3_in;
  button_conditioner_5 btn_cond_3 (
    .clk(clk),
    .in(M_btn_cond_3_in),
    .out(M_btn_cond_3_out)
  );
  wire [16-1:0] M_dec_ctr_digits;
  reg [1-1:0] M_dec_ctr_rst;
  reg [1-1:0] M_dec_ctr_inc;
  multi_dec_ctr_6 dec_ctr (
    .clk(clk),
    .rst(M_dec_ctr_rst),
    .inc(M_dec_ctr_inc),
    .digits(M_dec_ctr_digits)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    io_led = 24'h000000;
    io_seg = 8'h00;
    io_sel = 4'h0;
    led = 8'h00;
    usb_tx = usb_rx;
    M_btn_cond_start_in = io_button[4+0-:1];
    M_btn_cond_reset_in = io_button[3+0-:1];
    M_btn_cond_1_in = io_button[0+0-:1];
    M_btn_cond_2_in = io_button[1+0-:1];
    M_btn_cond_3_in = io_button[2+0-:1];
    M_edge_dt_btn_start_in = M_btn_cond_start_out;
    M_edge_dt_btn_reset_in = M_btn_cond_reset_out;
    M_edge_dt_btn_1_in = M_btn_cond_1_out;
    M_edge_dt_btn_2_in = M_btn_cond_2_out;
    M_edge_dt_btn_3_in = M_btn_cond_3_out;
    M_game_start_button = M_edge_dt_btn_start_out;
    M_game_reset_button = M_edge_dt_btn_reset_out;
    M_game_button_1 = M_edge_dt_btn_1_out;
    M_game_button_2 = M_edge_dt_btn_2_out;
    M_game_button_3 = M_edge_dt_btn_3_out;
    io_led[0+0+2-:3] = M_game_led_out[0+2-:3];
    io_led[0+3+2-:3] = M_game_led_out[3+2-:3];
    io_led[8+0+2-:3] = M_game_led_out[6+2-:3];
    io_led[8+3+2-:3] = M_game_led_out[9+2-:3];
    io_led[16+0+2-:3] = M_game_led_out[12+2-:3];
    M_dec_ctr_inc = M_game_dec_score_inc;
    M_dec_ctr_rst = M_game_dec_score_rst;
    M_seg_values = M_dec_ctr_digits;
    io_seg = ~M_seg_seg;
    io_sel = ~M_seg_sel;
  end
endmodule
